/////=====Structs_&_Arrays=====/////
struct Button {int id; String type; String note; const int pin; int lastButtonState; unsigned long lastDebounceTime; int buttonState;};
/////====Note Buttons=====/////
Button button = {1, "note", "C3", 8};
Button button3 = {3, "note", "D3", 9};
Button button5 = {5, "note", "E3", 10};
Button button7 = {7, "note", "F3", 11};
Button button9 = {9, "note", "G3", 12};

/////=====Velocity_Buttons=====/////
Button button2 = {2, "velocity", "C3", 2};
Button button4 = {4, "velocity", "D3", 3};
Button button6 = {6, "velocity", "E3", 4};
Button button8 = {8, "velocity", "F3", 5};
Button button10 = {10, "velocity", "G3", 6};

//Button button3 = {3, "switch", "NONE", 11};
struct Button noteButtonList[10] = {button, button2, button3, button4, button5, button6, button7, button8, button9, button10};

/////=====Global_Variables=====/////
unsigned long time1;               
unsigned long interval;              // Time interval between the two button presses.
int velocity_setting = 1;            // 0 is velocity sensing off, 1 is on.
int mono_poly = 0;                   // 0 is Mono, 1 is Poly.
unsigned long debounceDelay = 50;    // The debounce time;
int channel = 1;

/////=====Setup=====/////
void setup() {
  // Set MIDI baud rate:
  Serial.begin(31250);
  // Set Serial Rate
  //Serial.begin(9600);
  for (int i; i <  sizeof(noteButtonList); i++){
     pinMode(noteButtonList[i].pin, INPUT_PULLUP);
  }
}

/////-----Functions-----/////
void noteOn(int cmd, int pitch, int velocity) {
  Serial.write(cmd);
  Serial.write(pitch);
  Serial.write(velocity);
}

void button_read(Button &but){

  int reading = digitalRead(but.pin);

  if (reading != but.lastButtonState) {
      but.lastDebounceTime = millis();
    }
    
  if ((millis() - but.lastDebounceTime) > debounceDelay) {
    if (reading != but.buttonState) {
      but.buttonState = reading;
      if (but.buttonState == LOW) {   //if button IS pushed
        while(but.buttonState == HIGH) but.buttonState = digitalRead(but.pin);
        if (but.type == "note") {
          time1 = millis();
          if (velocity_setting == 0){
            noteOn(0x90, 0x5A, 0x45);
            //Serial.println("Sent MIDI note.");
          }
        } else if (but.type == "velocity" && velocity_setting != 0 ) {
          interval = millis() - time1;
          //Serial.print("Interval: ");
          //Serial.println(interval);
          noteOn(0x90, 0x5A, 0x45);
          //Serial.println("Sent MIDI note with velocity.");
        } else if (but.type == "switch"){
          if (velocity_setting == 1){
            velocity_setting = 0;
          } else {
            velocity_setting = 1;
          }
        }
      }
    }
  }
  but.lastButtonState = reading;
}

/////-----Main Loop-----/////
void loop() {
  for (int i = 0; i <  10; i++){
      button_read(noteButtonList[i]);
  }
}
